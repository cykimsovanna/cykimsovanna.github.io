---
title: "Information Management Assignment 3"
format: html
---

### Getting a list using SQL codes

-   Students IDS

    ```{r, eval=FALSE}
    SELECT DISTINCT ID FROM takes
    ```

    ![](images/clipboard-2826338049.png)

-   Instructors

    ```{r, eval=FALSE}
    SELECT name from instructor
    ```

    ![](images/clipboard-2614036907.png)

-   Departments

    ```{r, eval=FALSE}
    SELECT dept_name FROM department
    ```

    ![](images/clipboard-376030355.png)

### Doing queries using SQL codes

-   Finding the ID and name of each student who has taken at least 1 Computer Science course (no duplicates)

    ```{r, eval=FALSE}
    SELECT DISTINCT s.ID, s.name
    FROM student AS S
    JOIN takes AS t ON s.ID = t.ID
    JOIN course AS c ON t.course_id = c.course_id
    WHERE c.dept_name = 'Comp. Sci.'
    ```

    ![](images/clipboard-2198977801.png)

-   Adding grades to the list

    ```{r, eval=FALSE}
    SELECT DISTINCT s.ID, s.name, t.grade
    FROM student AS S
    JOIN takes AS t ON s.ID = t.ID
    JOIN course AS c ON t.course_id = c.course_id
    WHERE c.dept_name = 'Comp. Sci.'
    ```

    ![](images/clipboard-3935354343.png)

-   Finding the ID and name of each student who has not taken any course offered before 2017

    ```{r, eval=FALSE}
    SELECT s.ID, s.name
    FROM student AS s
    WHERE NOT EXISTS (
      SELECT 1
      FROM takes AS t
      JOIN course AS c ON t.course_ID = c.course_ID
      WHERE t.ID = s.ID AND t.year < 2017
    )
    ```

    ![](images/clipboard-1667400137.png)

-   Finding maximum salary of instructors in each department

    ```{r, eval=FALSE}
    SELECT dept_name, MAX(salary)
    FROM instructor
    GROUP BY dept_name
    ```

    ![](images/clipboard-2945256768.png)

-   Finding the lowest, across all departments, of the per-department maximum salary

    ```{r, eval=FALSE}
    SELECT dept_name, MAX(salary)
    FROM instructor
    WHERE salary = (
      SELECT MIN(max_salary)
      FROM (
        SELECT MAX(salary) AS max_salary
        FROM instructor
        GROUP BY dept_name
      )
    )
    ```

    ![](images/clipboard-1191314145.png)

-   Adding names to this list

    ```{r, eval=FALSE}
    SELECT dept_name, name, MAX(salary)
    FROM instructor
    WHERE salary = (
      SELECT MIN(max_salary)
      FROM (
        SELECT MAX(salary) AS max_salary
        FROM instructor
        GROUP BY dept_name
      )
    )
    ```

    ![](images/clipboard-4182147681.png)

### Practicing more advanced SQL codes

-   Finding number of students in each section

    ```{r, eval=FALSE}
    SELECT t.course_id, t.sec_id, t.year, t.semester, COUNT(t.ID) AS num
    FROM takes AS t
    GROUP BY t.course_id, t.sec_id, t.year, t.semester
    HAVING COUNT(t.ID) > 0
    ORDER BY t.course_id, t.sec_id, t.year, t.semester
    ```

    ![](images/clipboard-725137994.png)
